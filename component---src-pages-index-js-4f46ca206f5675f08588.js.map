{"version":3,"sources":["webpack://shantanualshi/./src/pages/index.js"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","tags","key","className","itemScope","itemType","Link","to","itemProp","split","t","trim","toLowerCase","date"],"mappings":"sKAgEA,UA1DkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,uLAUJ,gBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,KAC9B,OACE,sBAAIC,IAAKL,EAAKE,OAAOC,MACnB,2BACEG,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,uBAAKF,UAAU,4BACb,0BACE,gBAAC,EAAAG,KAAD,CAAMC,GAAIV,EAAKE,OAAOC,KAAMQ,SAAS,OACnC,wBAAMA,SAAS,YAAYnB,KAG/B,2BACGY,GACCA,EAAKQ,MAAM,KAAKb,KAAI,SAAAc,GAAC,OACnB,wBAAMR,IAAQb,EAAL,IAAcqB,EAAKP,UAAU,QAAtC,IACIO,EAAEC,OAAOC,oBAKrB,6BAAQf,EAAKC,YAAYe","file":"component---src-pages-index-js-4f46ca206f5675f08588.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const tags = post.frontmatter.tags\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <div className=\"title-and-tags-container\">\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <div>\n                      {tags &&\n                        tags.split(\",\").map(t => (\n                          <span key={`${title}-${t}`} className=\"tags\">\n                            #{t.trim().toLowerCase()}\n                          </span>\n                        ))}\n                    </div>\n                  </div>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}